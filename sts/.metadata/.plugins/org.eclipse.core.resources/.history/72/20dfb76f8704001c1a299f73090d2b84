package com.training.foodorder;

import java.sql.SQLException;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

//Rest controller - architecture 
@RestController
@RequestMapping("/users")
public class UserController {

	@Autowired
	private UserRepository userRepository;
	
	@GetMapping
	public Iterable<User> findAllUsers()
	{
		return userRepository.findAll();
	}
	
	@GetMapping("/{id}")
	public Optional<User> findUserById(@PathVariable int id)
	{
		if(userRepository.findById(id).isPresent()) return userRepository.findById(id);
		else {
			throw new RuntimeException("invalid ID");
		}
	}
	
	@PostMapping
	public String addUser(@RequestBody User user)
	{
		userRepository.save(user);
		return "created new user";
	}
	
	@PutMapping
	public String updateUser(@RequestBody User user)
	{
		userRepository.save(user);
		return "Updated user";
	}
	
	@DeleteMapping
	public String deleteUser(@RequestParam int id)
	{
		userRepository.deleteById(id);
		return "user deleted";
	}
}
